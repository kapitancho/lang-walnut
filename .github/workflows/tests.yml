name: Tests & Code Coverage

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    name: PHP ${{ matrix.php }} Tests

    strategy:
      matrix:
        php: ['8.4']

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, bcmath, xdebug
          coverage: xdebug
          tools: composer

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHPUnit tests with coverage
        run: |
          vendor/bin/phpunit \
            --coverage-clover=coverage.xml \
            --coverage-html=./coverage-report \
            --coverage-text

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: ./coverage.xml
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload coverage report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-php${{ matrix.php }}
          path: coverage-report/
          retention-days: 30

  coverage-badge:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, bcmath, xdebug
          coverage: xdebug
          tools: composer

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Generate coverage report
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Extract coverage percentage
        id: coverage
        run: |
          COVERAGE=$(php -r "
            \$xml = new SimpleXMLElement(file_get_contents('coverage.xml'));
            \$metrics = \$xml->xpath('/coverage/metrics')[0] ?? null;
            if (\$metrics === null) {
              echo '0';
            } else {
              \$covered = (int)\$metrics['covered'];
              \$total = (int)\$metrics['elements'];
              if (\$total === 0) {
                echo '0';
              } else {
                echo round((\$covered / \$total) * 100);
              }
            }
          ")
          echo "percent=$COVERAGE" >> $GITHUB_OUTPUT
          echo "Coverage: $COVERAGE%"

      - name: Create coverage badge
        run: |
          COVERAGE=${{ steps.coverage.outputs.percent }}

          # Determine color based on coverage
          if [ $COVERAGE -ge 90 ]; then
            COLOR="brightgreen"
          elif [ $COVERAGE -ge 70 ]; then
            COLOR="yellow"
          elif [ $COVERAGE -ge 50 ]; then
            COLOR="orange"
          else
            COLOR="red"
          fi

          # Create SVG badge
          mkdir -p .badges
          curl -s "https://img.shields.io/badge/coverage-${COVERAGE}%25-${COLOR}" -o .badges/coverage.svg

          # Also save the percentage to a file for easy access
          echo "$COVERAGE" > .badges/coverage.txt

      - name: Commit badge
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .badges/coverage.svg .badges/coverage.txt
          git commit -m "chore: update coverage badge [skip ci]" || echo "No changes to commit"

      - name: Push badge
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
